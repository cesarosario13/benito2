const app = require('../app'); // Importa la instancia de app desde app.js
const debug = require('debug')('socialnetwork:server');
const http = require('http');

// Obtener el puerto del entorno o usar el predeterminado
const port = normalizePort(process.env.PORT || '3000');
app.set('port', port); // Configura el puerto en la instancia de app

// Crear el servidor HTTP
const server = http.createServer(app);

// Escuchar en el puerto configurado
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// Funciones auxiliares
function normalizePort(val) {
    const port = parseInt(val, 10);
    if (isNaN(port)) return val;
    if (port >= 0) return port;
    return false;
}

function onError(error) {
    if (error.syscall !== 'listen') throw error;
    const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    debug('Listening on ' + bind);
}